/*
 * System call prototypes for rump.
 * DO NOT EDIT-- this file is automatically generated.
 */

struct pollfd;
struct epoll_event;
struct msghdr;
struct mmsghdr;
struct user_msghdr;
struct iovec;
struct sockaddr;
struct timeval;
struct timespec;
struct stat64;
struct statfs64;
struct utimbuf;
struct sigaction;
struct rlimit;
struct stat;
struct itimerspec;
struct linux_dirent64;

#include <linux/types.h>

#ifndef umode_t
typedef unsigned short		umode_t;
#endif /* umode_t */

#ifndef __dead
#define __dead __attribute__((__noreturn__))
#endif

#ifndef __printflike
#ifdef __GNUC__
#define __printflike(a,b) __attribute__((__format__ (__printf__,a,b)))
#else
#define __printflike(a,b)
#endif
#endif

#ifndef loff_t
typedef long long      loff_t;
#endif /* loff_t */
typedef int            clockid_t;
typedef unsigned long          u_long;
typedef unsigned int           u_int;
#define RUMP_REGISTER_T long
typedef RUMP_REGISTER_T register_t;
typedef int            pid_t;

#ifndef uid32_t
typedef unsigned int	uid32_t;
typedef unsigned int	gid32_t;
#endif

long rump___sysimpl_reboot(int magic1, int magic2, unsigned int cmd, void * arg);
long rump_sys_reboot(int magic1, int magic2, unsigned int cmd, void * arg) __asm("rump___sysimpl_reboot");
